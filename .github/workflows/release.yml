name: Release Action

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Required for creating releases
  packages: write  # Required for publishing packages

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-latest]
        include:
          - os: ubuntu-22.04
            name: ubuntu-22.04
          - os: ubuntu-latest
            name: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Create virtual environment
        run: |
          uv venv .venv
          source .venv/bin/activate
          uv pip install -e .

      - name: Build binary
        run: |
          source .venv/bin/activate
          pyinstaller --onefile \
            --clean \
            --strip \
            --noconfirm \
            --add-binary "/usr/lib/x86_64-linux-gnu/libm.so.6:." \
            --hidden-import=gcov \
            src/apicov.py

      - name: Create run script
        run: |
          echo '#!/bin/bash' > dist/run.sh
          echo '' >> dist/run.sh
          echo '# Get the directory of the current script' >> dist/run.sh
          echo 'SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"' >> dist/run.sh
          echo '' >> dist/run.sh
          echo '# Check if the apicov binary exists in the same directory' >> dist/run.sh
          echo 'if [[ -f "$SCRIPT_DIR/apicov" ]]; then' >> dist/run.sh
          echo '  echo "Executing: $SCRIPT_DIR/apicov $1 $2"' >> dist/run.sh
          echo '  # Run the apicov binary with the provided arguments' >> dist/run.sh
          echo '  "$SCRIPT_DIR/apicov" "$1" "$2"' >> dist/run.sh
          echo 'else' >> dist/run.sh
          echo '  echo "Error: apicov binary not found in $SCRIPT_DIR"' >> dist/run.sh
          echo '  exit 1' >> dist/run.sh
          echo 'fi' >> dist/run.sh
          chmod +x dist/run.sh

      - name: Create version-specific action file
        run: |
          cat > dist/action-${{ matrix.name }}.yml << 'EOF'
          name: 'ApiCov'
          description: 'Collect API coverage data from C/C++ projects'
          author: 'Code SA'
          branding:
            icon: 'code'
            color: 'blue'

          inputs:
            install_path:
              description: 'The directory where the build is installed'
              required: true
            root_path:
              description: 'The directory where the repo is cloned'
              required: true

          runs:
            using: "composite"
            steps:
              - name: Run APICov
                run: ${GITHUB_ACTION_PATH}/dist-${{ matrix.name }}/run.sh "${{ inputs.root_path }}" "${{ inputs.install_path }}"
                shell: bash
              - name: "Upload JSON files"
                uses: actions/upload-artifact@v4
                with:
                  name: api-coverage
                  path: |
                    ${{inputs.root_path}}/apis.json
                    ${{inputs.root_path}}/api_coverage.json
                  if-no-files-found: error
          EOF

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: apicov-${{ matrix.name }}
          path: |
            dist/apicov
            dist/run.sh
            dist/action-${{ matrix.name }}.yml

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/apicov-ubuntu-22.04/apicov
            artifacts/apicov-ubuntu-22.04/run.sh
            artifacts/apicov-ubuntu-22.04/action-ubuntu-22.04.yml
            artifacts/apicov-ubuntu-24.04/apicov
            artifacts/apicov-ubuntu-24.04/run.sh
            artifacts/apicov-ubuntu-24.04/action-ubuntu-24.04.yml
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 