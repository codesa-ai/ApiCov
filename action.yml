name: 'ApiCov'
description: 'Collect API coverage data from C/C++ projects'
author: 'Code SA'
branding:
  icon: 'code'
  color: 'blue'

inputs:
  install_path:
    description: 'The directory where the build is installed'
    required: false
  root_path:
    description: 'The directory where the repo is cloned'
    required: true
  api_key:
    description: 'API key for uploading coverage data to the endpoint'
    required: true
  doxygen_path:
    description: 'Path to the Doxygen HTML files (optional)'
    required: false

runs:
  using: "composite"
  steps:
    - name: Detect Ubuntu version
      id: detect_ubuntu
      run: |
        if [[ "$(lsb_release -rs)" == "22.04" ]]; then
          echo "version=ubuntu-22.04" >> $GITHUB_OUTPUT
        else
          echo "version=ubuntu-24.04" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Debug inputs
      run: |
        echo "Debug: root_path = ${{ inputs.root_path }}"
        echo "Debug: api_key = ${{ inputs.api_key != '' && '***' || 'not set' }}"
        echo "Debug: install_path = ${{ inputs.install_path != '' && inputs.install_path || 'not set' }}"
        echo "Debug: doxygen_path = ${{ inputs.doxygen_path != '' && inputs.doxygen_path || 'not set' }}"
        echo "Debug: GITHUB_ACTION_PATH = $GITHUB_ACTION_PATH"
      shell: bash

    - name: Run APICov
      run: |
        echo "Debug: Constructing command..."
        if [ -n "${{ inputs.install_path }}" ] && [ -n "${{ inputs.doxygen_path }}" ]; then
          CMD="${GITHUB_ACTION_PATH}/dist/run.sh \"${{ inputs.root_path }}\" \"${{ inputs.api_key }}\" --install_dir \"${{ inputs.install_path }}\" --doxygen_path \"${{ inputs.doxygen_path }}\""
        elif [ -n "${{ inputs.install_path }}" ]; then
          CMD="${GITHUB_ACTION_PATH}/dist/run.sh \"${{ inputs.root_path }}\" \"${{ inputs.api_key }}\" --install_dir \"${{ inputs.install_path }}\""
        elif [ -n "${{ inputs.doxygen_path }}" ]; then
          CMD="${GITHUB_ACTION_PATH}/dist/run.sh \"${{ inputs.root_path }}\" \"${{ inputs.api_key }}\" --doxygen_path \"${{ inputs.doxygen_path }}\""
        else
          CMD="${GITHUB_ACTION_PATH}/dist/run.sh \"${{ inputs.root_path }}\" \"${{ inputs.api_key }}\""
        fi
        echo "Debug: Full command: $CMD"
        chmod +x $GITHUB_ACTION_PATH/dist/run.sh
        eval "$CMD"
      shell: bash

    - name: "Upload JSON files"
      uses: actions/upload-artifact@v4
      with:
        name: api-coverage
        path: |
          ${{inputs.root_path}}/apis.json
          ${{inputs.root_path}}/api_coverage.json
        if-no-files-found: error


